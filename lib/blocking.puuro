#
# Blocking queue
#

blocking_queue_root = std.new_type 'blocking_queue;

t = blocking_queue_root.type;

t.set_method 'to_string {<s> "<blocking queue>"};

t.set_method 'push {<q obj>
    qq = q.unbox;
    qq.first.append obj;
    qq.second.empty.not.then {
        w = qq.second.pop_first;
        bg {
            w.continue \n
        }
    };
};

t.set_method 'pop {<q>
    qq = q.unbox;
    qq.first.empty.then {
        new_continuation {<cont>
            qq.second.append cont;
        };
    };
    qq.first.pop_first
};

make_blocking_queue = {
    # First list is for items, second list is for waiters
    blocking_queue_root.new [[] []];
};

#
# Distributor
#

distributor_root = std.new_type 'distributor;

t = distributor_root.type;

t.set_method 'to_string {<s> "<distributor>"};

t.set_method 'new_listener {<d>
    q = make_blocking_queue();
    d.unbox.append q;
    q
};

t.set_method 'remove_listener {<d q>
    d.box (d.unbox.filter {<x> x.id != q.id});
};

t.set_method 'push {<d obj>
    d.unbox.each {<q> q.push obj};
};

make_distributor = {
    distributor_root.new []
};

#
# Module
#

module 'blocking
{
    pollute 'blocking_queue make_blocking_queue;
    pollute 'distributor make_distributor;
};
