# Puuro main file

std.pollute std;

(args.size < 2).then
{ raise (exception 'not_enough_arguments "give more arguments to the program"); };

puuro_executable = args.first;
script_file      = args.second;

args = args.all_after 2;

eh = {<e c>
    print "exception: " e.name.s ", " e.obj;
    print "trace:";
    repeat {
        print "  " c.current_file.s ", " c.current_line;
        c = c.caller;
        c != \n;
    };
};

execute = {<fn>
  std.active_frame.set_exception_handler eh;
  f = compile_file fn;
  f.pollute std;
  f.set_local 'std std;
  f.set_local 'std2 std2;
  f.set_local 'resolver resolver;
  f.set_local 'args args;
  f.execute;
};

["exceptions.puuro"
 "list.puuro"
 "utils.puuro"
 "file.puuro"
 "string.puuro"].each {<x>
    execute lib_dir + "/" + x
};

execute script_file;
